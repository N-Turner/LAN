{"version":3,"sources":["webpack:///./client/src/components/Profile.jsx"],"names":["Profile","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","friends","homeLocation","userEmail","JSON","parse","sessionStorage","getItem","data","findOrCreateUser","email","userId","Number","id","friendEmail","setHome","bind","_assertThisInitialized","friendSearchHandler","Component","_this$props","latitude","longitude","homeLat","homeLong","fetch","method","headers","Content-Type","Accept","body","stringify","query","variables","then","res","json","homeSet","console","log","e","setState","target","value","_this2","_this$props2","name","picture","_this$state","findOrCreateFriendship","gql","_templateObject","_templateObject2","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","src","alt","type","onClick","react_apollo__WEBPACK_IMPORTED_MODULE_2__","mutation","mutate","_ref","loading","error","placeholder","onChange"],"mappings":"m6EAMMA,6BACJ,SAAAA,QAAYC,OAAO,IAAAC,MAAA,qJAAAC,CAAAC,KAAAJ,UACjBE,sJAAAG,CAAAD,KAAAE,gBAAAN,SAAAO,KAAAH,KAAMH,SACDO,MAAQ,CACXC,QAAS,GACTC,aAAc,KACdC,UAAWC,KAAKC,MAAMC,eAAeC,QAAQ,aAAaC,KAAKC,iBAAiBC,MAChFC,OAAQC,OAAOR,KAAKC,MAAMC,eAAeC,QAAQ,aAAaC,KAAKC,iBAAiBI,IACpFC,YAAa,MAEfpB,MAAKqB,QAAUrB,MAAKqB,QAAQC,KAAbC,8CAAAvB,SAEfA,MAAKwB,oBAAsBxB,MAAKwB,oBAAoBF,KAAzBC,8CAAAvB,SAXVA,2WADCyB,wSAeV,IAAAC,YAC+BxB,KAAKH,MAApC4B,SADAD,YACAC,SAAUC,UADVF,YACUE,UAAWZ,MADrBU,YACqBV,MACzBa,QAAUF,SACVG,SAAWF,UAQfG,MAAM,WAAY,CAChBC,OAAQ,OACRC,QAAS,CACPC,eAAgB,mBAChBC,OAAQ,oBAEVC,KAAM1B,KAAK2B,UAAU,CACnBC,MAdO,gMAePC,UAAW,CACTvB,YAAOa,gBAASC,uBAInBU,KAAK,SAAAC,KAAG,OAAIA,IAAIC,SAChBF,KAAK,SAACG,SACLC,QAAQC,IAAI,8BAA+BF,2EAI7BG,GAClB5C,KAAK6C,SAAS,CACZ3B,YAAa0B,EAAEE,OAAOC,gDASjB,IAAAC,OAAAhD,KAAAiD,aACwCjD,KAAKH,MAA5CqD,KADDD,aACCC,KAAMC,QADPF,aACOE,QADPC,aAAAH,aACgBxB,SADhBwB,aAC0BvB,UACU1B,KAAKI,OAAxCG,UAFD6C,YAEC7C,UAAWW,YAFZkC,YAEYlC,YAAaH,OAFzBqC,YAEyBrC,OAgB1BsC,wBAVaC,mDAAHC,mBAUeD,mDAAHE,qBAW5B,OACEC,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,2CAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,oBACAH,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,IAAKV,QAASW,IAAI,eAC1CL,2CAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYV,MAC1BO,2CAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASH,UAAU,kBAAkBI,QAAS,SAAAA,UAAA,OAAMhB,OAAK7B,YAAtE,aAKFsC,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,2CAAAC,EAAAC,cAAA,qBACAF,2CAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,eACAH,2CAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAd,aACAH,2CAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,2CAAAC,EAAAC,cAACM,0CAAA,SAAD,CAAUC,SAAUb,uBAAwBhB,UAAW,CAAEtB,cAAQR,oBAAWW,0BACzE,SAACiD,OAADC,MAAsC,IAA3BC,QAA2BD,KAA3BC,QAASC,MAAkBF,KAAlBE,MAAkBF,KAAXxD,KAC1B,OAAIyD,QAAgBZ,2CAAAC,EAAAC,cAAA,uBAChBW,MAAcb,2CAAAC,EAAAC,cAAA,2CAEhBF,2CAAAC,EAAAC,cAAA,WACEF,2CAAAC,EAAAC,cAAA,SAAOC,UAAU,gBAAgBW,YAAY,qCAAqCC,SAAU,SAAAA,SAAA5B,GAAC,OAAII,OAAK1B,oBAAoBsB,MAC1Ha,2CAAAC,EAAAC,cAAA,UAAQI,KAAK,SAASC,QAASG,QAA/B,mCAYLvE","file":"3.fbe251227055ea87572f.bundle.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Mutation, Query} from 'react-apollo';\nimport gql from 'graphql-tag';\n// import AlertFeed from './AlertFeed';\n\nclass Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      friends: [],\n      homeLocation: null,\n      userEmail: JSON.parse(sessionStorage.getItem('userData')).data.findOrCreateUser.email,\n      userId: Number(JSON.parse(sessionStorage.getItem('userData')).data.findOrCreateUser.id),\n      friendEmail: null,\n    };\n    this.setHome = this.setHome.bind(this);\n    // this.addFriend = this.addFriend.bind(this);\n    this.friendSearchHandler = this.friendSearchHandler.bind(this);\n  }\n\n  setHome() {\n    const { latitude, longitude, email } = this.props;\n    let homeLat = latitude;\n    let homeLong = longitude;\n    const query = `\n    mutation SetHome($email: String!, $homeLat: Float!, $homeLong: Float!) {\n      setHome(email: $email, latitude: $homeLat, longitude: $homeLong) {\n        email\n      }\n    }\n    `;\n    fetch('/graphql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n      },\n      body: JSON.stringify({\n        query,\n        variables: {\n          email, homeLat, homeLong,\n        },\n      }),\n    })\n      .then(res => res.json())\n      .then((homeSet) => {\n        console.log('Home location has been set!', homeSet);\n      });\n  }\n\n  friendSearchHandler(e) {\n    this.setState({\n      friendEmail: e.target.value,\n    });\n  }\n\n  // addFriend() {\n  //   console.log('Checking if user exists...');\n    \n  // }\n\n  render() {\n    const { name, picture, latitude, longitude } = this.props;\n    const { userEmail, friendEmail, userId } = this.state\n\n    // s\n    \n    // console.log(name, picture, latitude, longitude);\n\n    const findFriend = gql`\n    query findFriend( $friendEmail: String) {\n      findFriend(email: $friendEmail) {\n        id\n        name\n        email\n      }\n    }\n    `;\n\n    const findOrCreateFriendship = gql`\n    mutation findOrCreateFriendship($userId: Int, $userEmail: String!, $friendEmail: String!) {\n      findOrCreateFriendship(userId: $userId, userEmail: $userEmail, friendEmail: $friendEmail) {\n        user1\n        user2\n        new\n      }\n    }\n    `;\n\n    // const userEmail = JSON.parse(sessionStorage.getItem('userData')).email;\n    return (\n      <div className=\"profile-layout\">\n        <h1 className=\"ava-header\">My Alert Network</h1>\n        <div className=\"avatar-card\">\n          <img className=\"avatar\" src={picture} alt=\"avatar pic\" />\n          <h2 className=\"ava-name\">{name}</h2>\n          <button type=\"button\" className=\"location-button\" onClick={() => this.setHome()}>Set Home</button>\n        </div>\n        {/* <div className=\"friend-feed\">\n          <AlertFeed latitude={latitude} longitude={longitude} />\n        </div> */}\n        <div className=\"friend-list\">\n          <h1>Friends</h1>\n          <h2 className=\"ava-name\">Nathan Vang</h2>\n          <h3 className=\"ava-name\">Minnesota</h3>\n          <div className=\"friend-search\">\n            <Mutation mutation={findOrCreateFriendship} variables={{ userId, userEmail, friendEmail }}>\n              {(mutate, { loading, error, data }) => {\n                if (loading) return <p>Loading...</p>;\n                if (error) return <p>Error: Email address not found</p>;\n                return (\n                  <div>\n                    <input className=\"friend-search\" placeholder=\"Search for friend by email address\" onChange={e => this.friendSearchHandler(e)} />\n                    <button type=\"button\" onClick={mutate}>Add Friend</button>\n                  </div>\n                );\n              }}\n            </Mutation>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Profile;\n"],"sourceRoot":""}