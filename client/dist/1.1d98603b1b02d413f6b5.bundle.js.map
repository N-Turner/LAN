{"version":3,"sources":["webpack:///./client/src/components/create-alert/Camera.jsx","webpack:///./client/src/components/create-alert/Alert.jsx"],"names":["AlertCamera","getFileName","imageNum","blobType","photoNumber","padWithZeroNumber","num","width","length","Array","join","ext","getFileExtention","IMAGE_TYPES","PNG","JPG","concat","downloadImageFile","dataUri","downloadImageFileFromConverted","blob","window","URL","webkitURL","anchor","document","createElement","download","imageNumber","type","href","createObjectURL","mouseEvent","createEvent","initMouseEvent","dispatchEvent","dataURItoConvert","dataURI","byteString","atob","split","mimeString","arrBuff","ArrayBuffer","unitArr","Uint8Array","i","charCodeAt","Blob","react_default","a","build_default","onTakePhoto","console","log","onCameraError","error","idealFacingMode","FACING_MODES","ENVIRONMENT","idealResolution","height","imageType","imageCompression","isMaxResolution","isImageMirror","isDisplayStartCameraError","sizeFactor","onCameraStart","stream","onCameraStop","autoPlay","Alert","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","photo","photoTag","notes","modal","handleChange","bind","_assertThisInitialized","handleDrop","showUploaded","Component","e","setState","_defineProperty","target","name","value","files","_this2","upload","map","file","formData","FormData","append","Date","now","axios","post","headers","X-Requested-With","then","res","data","photoURL","secure_url","all","className","src","alt","view","_this3","create_alert_modal","Camera","changeModal","onClick","_this4","_this$state","_this$props","category","latitude","longitude","createAlert","gql","_templateObject","w","toUpperCase","slice","renderModal","placeholder","onChange","size","es","onDrop","multiple","accept","react_apollo_browser_umd","mutation","variables","mutate","_ref","loading","navigate"],"mappings":"gkBAoGeA,iCAhGK,SAAdA,cAEJ,IA8BMC,YAAc,SAAdA,YAAeC,SAAUC,UAC7B,IACMC,YAjBkB,SAApBC,kBAAqBC,IAAKC,OAE9B,OADAD,KAAY,IACDE,QAAUD,MAAQD,IAAM,IAAIG,MAAMF,MAAQD,IAAIE,OAAS,GAC/DE,KAAK,KAAOJ,IAcKD,CAAkBH,SAAU,GAC1CS,IAZiB,SAAnBC,iBAAoBT,UACxB,IAAIQ,IAAME,kBAAYC,IAKtB,MAHiB,eAAbX,WACFQ,IAAME,kBAAYE,KAEbJ,IAMKC,CAAiBT,UAE7B,SAAAa,OAJe,QAIf,KAAAA,OAAoBZ,YAApB,KAAAY,OAAmCL,MAc/BM,kBAAoB,SAApBA,kBAAqBC,QAAShB,WAXG,SAAjCiB,+BAAkCC,KAAMlB,UAC5CmB,OAAOC,IAAMD,OAAOE,WAAaF,OAAOC,IAExC,IAAIE,OAASC,SAASC,cAAc,KACpCF,OAAOG,SAAW1B,YAAY2B,YAAaR,KAAKS,MAChDL,OAAOM,KAAOT,OAAOC,IAAIS,gBAAgBX,MACzC,IAAIY,WAAaP,SAASQ,YAAY,eACtCD,WAAWE,eAAe,SAAS,GAAM,EAAMb,OAAQ,EAAG,EAAG,EAAG,EAAG,GAAG,GAAO,GAAO,GAAO,EAAO,EAAG,MACrGG,OAAOW,cAAcH,YAKrBb,CAnDuB,SAAnBiB,iBAAoBC,SAQxB,IAPA,IAAIC,WAAaC,KAAKF,QAAQG,MAAM,KAAK,IAErCC,WAAaJ,QAAQG,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGA,MAAM,KAAK,GAE5DE,QAAU,IAAIC,YAAYL,WAAW9B,QACrCoC,QAAU,IAAIC,WAAWH,SAEpBI,EAAI,EAAGA,EAAIR,WAAW9B,SAAUsC,EACvCF,QAAQE,GAAKR,WAAWS,WAAWD,GAGrC,OADW,IAAIE,KAAK,CAACN,SAAU,CAAEb,KAAMY,aAuC5BL,CAAiBlB,WAI1BU,YAAc,EAoBlB,OACEqB,cAAAC,EAAAxB,cAACyB,cAAAD,EAAD,CACEE,YAAa,SAAAA,YAAClC,UApBE,SAAdkC,YAAelC,SACnBmC,QAAQC,IAAI,kBACZrC,kBAAkBC,SAClBU,aAAe,EAiBewB,CAAYlC,UACxCqC,cAAe,SAAAA,cAACC,QAfE,SAAhBD,cAAiBC,OACrBH,QAAQG,MAAM,gBAAiBA,OAcDD,CAAcC,QAC1CC,gBAAiBC,mBAAaC,YAC9BC,gBAAiB,CAAErD,MAAO,KAAMsD,OAAQ,KACxCC,UAAWjD,kBAAYE,IACvBgD,iBAAkB,IAClBC,iBAAiB,EACjBC,eAAe,EACfC,2BAA2B,EAC3BC,WAAY,EACZC,cAAe,SAAAA,cAACC,SApBE,SAAhBD,cAAiBC,QACrBhB,QAAQC,IAAI,gBAAiBe,QAmBED,CAAcC,SAC3CC,aAAc,SAAAA,gBAjBG,SAAfA,eACJjB,QAAQC,IAAI,2BAgBYgB,IACtBC,UAAU,msDCnFVC,iCACJ,SAAAA,MAAYC,OAAO,IAAAC,MAAA,qJAAAC,CAAAC,KAAAJ,QACjBE,sJAAAG,CAAAD,KAAAE,gBAAAN,OAAAO,KAAAH,KAAMH,SACDO,MAAQ,CACXC,MAAO,KACPC,SAAU,GACVC,MAAO,GACPC,MAAO,IAETV,MAAKW,aAAeX,MAAKW,aAAaC,KAAlBC,8CAAAb,SAGpBA,MAAKc,WAAad,MAAKc,WAAWF,KAAhBC,8CAAAb,SAClBA,MAAKe,aAAef,MAAKe,aAAaH,KAAlBC,8CAAAb,SAZHA,yWADDgB,iRAgBLC,GACXf,KAAKgB,6KAALC,CAAA,GACGF,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,sDAKnBC,OAAO,IAAAC,OAAAtB,KACRM,SAAaN,KAAKI,MAAlBE,SACFiB,OAASF,MAAMG,IAAI,SAACC,MACxB,IAAMC,SAAW,IAAIC,SAOrB,OANAD,SAASE,OAAO,OAAQH,MACxBC,SAASE,OAAO,OAAhB,GAAAxF,OAA2BkE,WAC3BoB,SAASE,OAAO,gBAAiB,YACjCF,SAASE,OAAO,UAAW,mBAC3BF,SAASE,OAAO,YAAcC,KAAKC,MAAQ,IAAQ,GAE5CC,gBAAMC,KAAK,kDAAmDN,SAAU,CAC7EO,QAAS,CAAEC,mBAAoB,oBAE9BC,KAAK,SAACC,KAAQ,IACP/B,MAAUiB,OAAKlB,MAAfC,MACFgC,KAAOD,IAAIC,KACXC,SAAWD,KAAKE,WAEtBjB,OAAKN,SAAS,CACZX,MAAK,GAAAjE,OAAKkG,WACT,WACD7D,QAAQC,IAAI,oBAAqB2B,SAEnC5B,QAAQC,IAAI2D,UAIhBN,gBAAMS,IAAIjB,QAAQY,KAAK,WACrB1D,QAAQC,IAAI,0FAKD,IACL2B,MAAUL,KAAKI,MAAfC,MACR,OAAiB,OAAVA,MAAiBhC,cAAAC,EAAAxB,cAAA,SAAI,KAExBuB,cAAAC,EAAAxB,cAAA,OAAK2F,UAAU,cACbpE,cAAAC,EAAAxB,cAAA,OAAK4F,IAAKrC,MAAOsC,IAAI,WAAWhH,MAAM,MAAMsD,OAAO,QACnDZ,cAAAC,EAAAxB,cAAA,0FAiEI8F,MACV5C,KAAKgB,SAAS,CACZR,MAAOoC,yDAIG,IAAAC,OAAA7C,KAEZ,GAAc,WADIA,KAAKI,MAAfI,MAEN,OACEnC,cAAAC,EAAAxB,cAACgG,mBAAA,EAAD,KACEzE,cAAAC,EAAAxB,cAAA,OAAK2F,UAAU,mBACbpE,cAAAC,EAAAxB,cAACiG,OAAD,CACEC,YAAahD,KAAKgD,YAAYtC,KAAKV,QAErC3B,cAAAC,EAAAxB,cAAA,UAAQG,KAAK,SAASgG,QAAS,SAAAA,UAAA,OAAMJ,OAAKG,YAAY,MAAtD,8DAOD,IAAAE,OAAAlD,KAAAmD,YAC4BnD,KAAKI,MAAhCC,MADD8C,YACC9C,MAAOE,MADR4C,YACQ5C,MAAOD,SADf6C,YACe7C,SADf8C,YAEmCpD,KAAKH,MAAvCwD,SAFDD,YAECC,SAAUC,SAFXF,YAEWE,SAAUC,UAFrBH,YAEqBG,UACtBC,YAAcC,cAAHC,mBAWjB,OACErF,cAAAC,EAAAxB,cAAA,OAAK2F,UAAU,gBACbpE,cAAAC,EAAAxB,cAAA,OAAK2F,UAAU,iBACbpE,cAAAC,EAAAxB,cAAA,2BAEG,IACAuG,SAASzF,MAAM,OAAO4D,IAAI,SAAAmC,GAAC,OAAIA,EAAE,GAAGC,cAAgBD,EAAEE,MAAM,KAAI/H,KAAK,OAG1EuC,cAAAC,EAAAxB,cAAA,OAAK2F,UAAU,SACZzC,KAAK8D,cACNzF,cAAAC,EAAAxB,cAAA,UAAQ2F,UAAU,eAAexF,KAAK,SAASgG,QAAS,SAAAA,UAAA,OAAMC,OAAKF,YAAY,YAA/E,iBACA3E,cAAAC,EAAAxB,cAAA,SAAOG,KAAK,OAAOkE,KAAK,WAAW4C,YAAY,gCAAgCC,SAAUhE,KAAKS,aAAcW,MAAOd,YAErHjC,cAAAC,EAAAxB,cAAA,OAAK2F,UAAU,SACbpE,cAAAC,EAAAxB,cAAA,SAAOmH,KAAK,GAAGhH,KAAK,OAAOkE,KAAK,QAAQ4C,YAAY,kBAAkBC,SAAUhE,KAAKS,aAAcW,MAAOb,SAE5GlC,cAAAC,EAAAxB,cAACoH,GAAA,EAAD,CACEzB,UAAU,WACVtB,KAAK,OACLlE,KAAK,OACLkH,OAAQnE,KAAKY,WACbwD,UAAQ,EACRC,OAAO,WAEPhG,cAAAC,EAAAxB,cAAA,gDAEFuB,cAAAC,EAAAxB,cAAA,WACGkD,KAAKa,gBAERxC,cAAAC,EAAAxB,cAAA,OAAK2F,UAAU,UACbpE,cAAAC,EAAAxB,cAACwH,yBAAA,SAAD,CAAUC,SAAUf,YAAagB,UAAW,CAAEnB,kBAAUC,kBAAUC,oBAAWhD,YAAOF,YAAOC,oBACxF,SAACmE,OAADC,MAAgC,IAArBC,QAAqBD,KAArBC,QAAS/F,MAAY8F,KAAZ9F,MACnB,OAAI+F,QAAgBtG,cAAAC,EAAAxB,cAAA,uBAChB8B,MAAcP,cAAAC,EAAAxB,cAAA,iCAEhBuB,cAAAC,EAAAxB,cAAA,UACEG,KAAK,SACLgG,QAAS,SAAAA,UACPwB,SACAG,oBAAS,OAJb,2BAmBDhF","file":"1.1d98603b1b02d413f6b5.bundle.js","sourcesContent":["import React, { Component } from 'react';\nimport Camera, { FACING_MODES, IMAGE_TYPES } from 'react-html5-camera-photo';\nimport 'react-html5-camera-photo/build/css/index.css';\n\nconst AlertCamera = () => {\n  // Stream conversion code based on react-html5-camera-photo library\n  const dataURItoConvert = (dataURI) => {\n    let byteString = atob(dataURI.split(',')[1]);\n\n    let mimeString = dataURI.split(',')[0].split(':')[1].split(';')[0];\n\n    let arrBuff = new ArrayBuffer(byteString.length);\n    let unitArr = new Uint8Array(arrBuff);\n\n    for (let i = 0; i < byteString.length; ++i) {\n      unitArr[i] = byteString.charCodeAt(i);\n    }\n    let blob = new Blob([arrBuff], { type: mimeString });\n    return blob;\n  };\n\n  const padWithZeroNumber = (num, width) => {\n    num = num + '';\n    return num.length >= width ? num : new Array(width - num.length + 1)\n      .join('0') + num;\n  };\n\n  const getFileExtention = (blobType) => {\n    let ext = IMAGE_TYPES.PNG;\n\n    if (blobType === 'image/jpeg') {\n      ext = IMAGE_TYPES.JPG;\n    }\n    return ext;\n  };\n\n  const getFileName = (imageNum, blobType) => {\n    const prefix = 'photo';\n    const photoNumber = padWithZeroNumber(imageNum, 4);\n    const ext = getFileExtention(blobType);\n\n    return `${prefix}-${photoNumber}.${ext}`;\n  };\n\n  const downloadImageFileFromConverted = (blob, imageNum) => {\n    window.URL = window.webkitURL || window.URL;\n\n    let anchor = document.createElement('a');\n    anchor.download = getFileName(imageNumber, blob.type);\n    anchor.href = window.URL.createObjectURL(blob);\n    let mouseEvent = document.createEvent('MouseEvents');\n    mouseEvent.initMouseEvent('click', true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);\n    anchor.dispatchEvent(mouseEvent);\n  };\n\n  const downloadImageFile = (dataUri, imageNum) => {\n    let blob = dataURItoConvert(dataUri);\n    downloadImageFileFromConverted(blob, imageNum);\n  };\n\n  let imageNumber = 0;\n\n  const onTakePhoto = (dataUri) => {\n    console.log('photo snapped!');\n    downloadImageFile(dataUri, imageNumber);\n    imageNumber += 1;\n  };\n\n  const onCameraError = (error) => {\n    console.error('onCameraError', error);\n  };\n\n  const onCameraStart = (stream) => {\n    console.log('onCameraStart', stream);\n  };\n\n  const onCameraStop = () => {\n    console.log('Camera stream has ended');\n  };\n\n  return (\n    <Camera\n      onTakePhoto={(dataUri) => { onTakePhoto(dataUri); }}\n      onCameraError={(error) => { onCameraError(error); }}\n      idealFacingMode={FACING_MODES.ENVIRONMENT}\n      idealResolution={{ width: 2500, height: 3000 }}\n      imageType={IMAGE_TYPES.JPG}\n      imageCompression={0.97}\n      isMaxResolution={false}\n      isImageMirror={false}\n      isDisplayStartCameraError={true}\n      sizeFactor={1}\n      onCameraStart={(stream) => { onCameraStart(stream); }}\n      onCameraStop={() => { onCameraStop(); }}\n      autoPlay={true}\n    />\n\n  );\n};\n\nexport default AlertCamera;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Dropzone from 'react-dropzone';\nimport { navigate } from '@reach/router';\nimport { Mutation } from 'react-apollo';\nimport  gql  from 'graphql-tag';\nimport AlertCamera from './Camera';\nimport Modal from './modal';\n// import CreatAlertWithMutation from './CreateAlertMutation';\n\n\nclass Alert extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photo: null,\n      photoTag: '',\n      notes: '',\n      modal: '',\n    };\n    this.handleChange = this.handleChange.bind(this);\n    // this.handleSubmit = this.handleSubmit.bind(this);\n    // this.waitForData = this.waitForData.bind(this);\n    this.handleDrop = this.handleDrop.bind(this);\n    this.showUploaded = this.showUploaded.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n/* eslint-disable */\n  handleDrop(files) {\n    const { photoTag } = this.state;\n    const upload = files.map((file) => {\n      const formData = new FormData();\n      formData.append('file', file);\n      formData.append('tags', `${photoTag}`);\n      formData.append('upload_preset', 'pnqbmmuw'); // upload preset name\n      formData.append('api_key', '491544247472459'); // api key\n      formData.append('timestamp', (Date.now() / 1000) | 0);\n      // Cloudinary upload request\n      return axios.post('https://api.cloudinary.com/v1_1/n3/image/upload', formData, {\n        headers: { 'X-Requested-With': 'XMLHttpRequest' },\n\n      }).then((res) => {\n        const { photo } = this.state;\n        const data = res.data;\n        const photoURL = data.secure_url;\n\n        this.setState({\n          photo: `${photoURL}`,\n        }, () => {\n          console.log('photo url updated', photo);\n        });\n        console.log(data);\n      });\n    });\n      // After all files uploaded\n    axios.all(upload).then(() => {\n      console.log('All photos successfully uploaded');\n    });\n  }\n  /* eslint-enable */\n\n  showUploaded() {\n    const { photo } = this.state;\n    return photo === null ? <p>{' '}</p>\n      : (\n        <div className=\"user-photo\">\n          <img src={photo} alt=\"uploaded\" width=\"200\" height=\"150\" />\n          <p>\n            Photo successfully uploaded!\n          </p>\n        </div>);\n  }\n\n  // handleSubmit() {\n  //   const {\n  //     category,\n  //     EventId,\n  //     latitude,\n  //     longitude,\n  //   } = this.props;\n  //   const { notes, photo, photoTag } = this.state;\n  //   // const alertData = {\n  //   //   category,\n  //   //   EventId,\n  //   //   latitude,\n  //   //   longitude,\n  //   //   notes,\n  //   //   photo,\n  //   //   photoTag,\n  //   // };\n    \n  //   const query = gql`\n  //   mutation CreateAlert($category: String!, $EventId: Int, $latitude: Float!, $longitude: Float!, $notes: String, $photo: String, $photoTag: String) {\n  //     createAlert(EventId: $EventId, category: $category, latitude: $latitude, longitude: $longitude, notes: $notes, url: $photo, photoTag: $photoTag ) {\n  //       id\n  //       category\n  //       createdAt\n  //       url\n  //     }\n  //   }\n  //   `;\n  //   fetch('/graphql', {\n  //     method: 'POST',\n  //     headers: {\n  //       'Content-Type': 'application/json',\n  //       Accept: 'application/json',\n  //     },\n  //     body: JSON.stringify({\n  //       query,\n  //       variables: {\n  //         category, latitude, longitude, notes, photo, photoTag,\n  //       },\n  //     }),\n  //   })\n  //     .then(response => response.json())\n  //     .then((newAlert) => {\n  //       console.log('Data returned after mutation ', newAlert.data);\n  //       navigate('/');\n  //     });\n  // }\n\n  // waitForData() {\n  //   const { latitude } = this.props;\n  //   return latitude !== 'Loading...' ? (\n  //     <button type=\"button\" onClick={this.handleSubmit}>Submit</button>\n  //   ) : (\n  //     <p>\n  //       Still grabbing your location... Please wait\n  //     </p>\n  //   );\n  // }\n\n  changeModal(view) {\n    this.setState({\n      modal: view,\n    });\n  }\n\n  renderModal() {\n    const { modal } = this.state;\n    if (modal === 'camera') {\n      return (\n        <Modal>\n          <div className=\"modal-container\">\n            <AlertCamera\n              changeModal={this.changeModal.bind(this)}\n            />\n            <button type=\"button\" onClick={() => this.changeModal('')}>Exit camera mode</button>\n          </div>\n        </Modal>\n      );\n    }\n  }\n\n  render() {\n    const { photo, notes, photoTag } = this.state;\n    const { category, latitude, longitude } = this.props;\n    const createAlert = gql`\n    mutation CreateAlert($category: String!, $EventId: Int, $latitude: Float!, $longitude: Float!, $notes: String, $photo: String, $photoTag: String) {\n      createAlert(EventId: $EventId, category: $category, latitude: $latitude, longitude: $longitude, notes: $notes, url: $photo, photoTag: $photoTag ) {\n        id\n        category\n        createdAt\n        url\n      }\n    }\n    `;\n    // console.log(`category: ${category}\\nlatitude: ${latitude}\\nlongitude: ${longitude}`);\n    return (\n      <div className=\"alert-layout\">\n        <div className=\"location-info\">\n          <h1>\n            Disaster Type:\n            {' '}\n            {category.split(/\\s+/).map(w => w[0].toUpperCase() + w.slice(1)).join(' ')}\n          </h1>\n        </div>\n        <div className=\"photo\">\n          {this.renderModal()}\n          <button className=\"photo-button\" type=\"button\" onClick={() => this.changeModal('camera')}>Capture Photo</button>\n          <input type=\"text\" name=\"photoTag\" placeholder=\"Add tags for your photos here\" onChange={this.handleChange} value={photoTag} />\n        </div>\n        <div className=\"notes\">\n          <input size=\"\" type=\"text\" name=\"notes\" placeholder=\"Enter text here\" onChange={this.handleChange} value={notes} />\n        </div>\n        <Dropzone\n          className=\"dropzone\"\n          name=\"file\"\n          type=\"file\"\n          onDrop={this.handleDrop}\n          multiple\n          accept=\"image/*\"\n        >\n          <p>Drop files or click here to upload</p>\n        </Dropzone>\n        <div>\n          {this.showUploaded()}\n        </div>\n        <div className=\"submit\">\n          <Mutation mutation={createAlert} variables={{ category, latitude, longitude, notes, photo, photoTag }}>\n            {(mutate, { loading, error }) => {\n              if (loading) return <p>Loading...</p>;\n              if (error) return <p>Error creating alert</p>;\n              return (\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    mutate();\n                    navigate('/');\n                  }}\n                >\n                Submit\n                </button>\n              );\n            }}\n          </Mutation>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Alert;\n"],"sourceRoot":""}